// python 
class Solution:
    def maxSubArray(self, nums: List[int]) -> int:
        #动态规划
        # for i in range(1,len(nums)):
        #     nums[i]+=max(0,nums[i-1])
        # return max(nums)
        
        ans,maxnum=nums[0],nums[0]
        for i in range(1,len(nums)):
            if maxnum<=0:
                maxnum=nums[i]
            else:
                maxnum+=nums[i]
            if maxnum>ans:
                ans=maxnum
        return ans
        
        
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int len = nums.size();
        if(len == 0) { return 0; }
        vector<int> dp(len);
        
        dp[0] = nums[0];
        int result = max(dp[0], -99999);
        
        for (size_t i = 1; i < len; i++)
        {
            dp[i] = max(nums[i], nums[i] + dp[i-1]); // 大于或小于0
            result = max(dp[i], result);
        }
        return result;
    }

};
