/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int count_result = 0;
    // 完全二叉树的节点个数
    int countNodes(TreeNode* root) {
        if(root == nullptr) 
        {
            return 0;
        }
        // 计算左右子树的高度
        TreeNode* root1 = root;
        TreeNode* root2 = root;
        int left_high = 0, right_high = 0;

        while (root1 != nullptr)
        {
            root1 = root1->left;
            left_high += 1;
        }

        while (root2 != nullptr)
        {
            root2 = root2->right;
            right_high += 1;
        }
        
        if (left_high == right_high)
        {   // 满二叉树
            count_result = pow(2, left_high) - 1;
            return count_result;   
        }
        
        return 1 + countNodes(root->left) + countNodes(root->right);
    }
};
