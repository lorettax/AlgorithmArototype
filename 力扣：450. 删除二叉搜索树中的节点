/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    // 删除二叉搜索树中的节点
    TreeNode* deleteNode(TreeNode* root, int key) {
        if (root == nullptr)
        {
            return nullptr;
        }

        if (root->val == key)
        {
            if(root->left == nullptr)
            {
                return root->right;
            }
            if (root->right == nullptr)
            {
                return root->left;
            }
            // 获取最大节点
            TreeNode* maxNode = getMax(root->left);
            root->val = maxNode->val;
            root->left = deleteNode(root->left, maxNode->val);
        }else if (root->val > key)    
        {
            root->left = deleteNode(root->left, key);
        }else if (root->val < key)    
        {
            root->right = deleteNode(root->right, key);
        }

        return root;
    }

    TreeNode* getMax(TreeNode* root) {
        while (root->right!= nullptr)
        {
            root= root->right;
        }
        return root;
    }

};
